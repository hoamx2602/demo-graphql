# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type user {
  _id: String!

  """Username """
  username: String!

  """User email """
  email: String!
  messages: [message!]!

  """Time when create a new user"""
  created_at: Int!
}

type room {
  _id: String!

  """Room name """
  name: String!

  """Time when create a new room"""
  created_at: Int!

  """Room members"""
  members: [user!]!
}

type message {
  _id: String!

  """Message of a user """
  message: String!
  room: room!

  """Sender email"""
  senderMail: String!

  """Receiver email"""
  receiverMail: String!

  """Time to send the message"""
  created_at: Int!
}

type LoggedUserOutput {
  """Generated access_token of the user"""
  access_token: String!
}

type Query {
  users: [user!]!
  rooms: [room!]!
  user(_id: String!): user!
}

type Mutation {
  register(createUserInput: CreateUserInput!): user!
  loginUser(loginUserInput: LoginUserInput!): LoggedUserOutput!
  createMessage(createMessageInput: CreateMessageInput!): message!
  updateUser(updateUserInput: UpdateUserInput!): user!
  removeUser(_id: String!): user!
  userTyping(userTypingInput: UserTypingInput!): Boolean!
  createChatRoom(name: String!): room!
  joinRoom(roomId: String!): room!
}

input CreateUserInput {
  """Username"""
  username: String!

  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

input LoginUserInput {
  """Email of the user"""
  email: String!

  """Password of the user"""
  password: String!
}

input CreateMessageInput {
  """Message of a user """
  message: String!

  """Receiver email"""
  receiverMail: String!
}

input UpdateUserInput {
  """Username"""
  username: String

  """Email of the user"""
  email: String

  """Password of the user"""
  password: String
  _id: String!
}

input UserTypingInput {
  """Email of the user"""
  email: String!

  """Receiver email"""
  receiverMail: String!
}

type Subscription {
  newMessage(receiverMail: String!): message!
  newUser: user!
  currentUserTyping(receiverMail: String!): user!
}